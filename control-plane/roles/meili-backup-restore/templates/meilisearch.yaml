---
apiVersion: v1
kind: Namespace
metadata:
  name: "{{ metal_control_plane_namespace }}"
  labels:
    app: "metal-stack-control-plane"
    name: "{{ metal_control_plane_namespace }}"
{% if meilisearch_registry_auth_enabled %}
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: {{ meilisearch_name }}-registry-credentials
  name: {{ meilisearch_name }}-registry-credentials
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ meilisearch_registry_auth | to_json | b64encode }}
{% endif %}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ meilisearch_name }}
  name: {{ meilisearch_name }}
spec:
  serviceName: {{ meilisearch_name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ meilisearch_name }}
  template:
    metadata:
      labels:
        app: {{ meilisearch_name }}
    spec:
{% if meilisearch_registry_auth_enabled %}
      imagePullSecrets:
      - name: {{ meilisearch_name }}-registry-credentials
{% endif %}
      containers:
      - name: meilisearch
        image: {{ meilisearch_image_name }}:{{ meilisearch_image_tag }}
        imagePullPolicy: {{ meilisearch_image_pull_policy }}
        command:
        - backup-restore-sidecar
        - wait
        envFrom:
        - configMapRef:
            name: {{ meilisearch_name }}
        - secretRef:
            name: {{ meilisearch_name }}
        ports:
        - containerPort: 7700
          name: http
          protocol: TCP
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 10
        resources: {{ meilisearch_resources | to_json }}
        volumeMounts:
        - mountPath: /backup
          name: backup
        - name: data
          mountPath: /data
        - name: bin-provision
          subPath: backup-restore-sidecar
          mountPath: /usr/local/bin/backup-restore-sidecar
        - name: backup-restore-sidecar-config
          mountPath: /etc/backup-restore-sidecar
      - name: backup-restore-sidecar
        image: {{ meilisearch_image_name }}:{{ meilisearch_image_tag }}
        imagePullPolicy: {{ meilisearch_image_pull_policy }}
        command:
        - backup-restore-sidecar
        - start
        ports:
        - containerPort: 8000
          name: grpc
        envFrom:
        - configMapRef:
            name: {{ meilisearch_name }}
        - secretRef:
            name: {{ meilisearch_name }}
        env:
        - name: BACKUP_RESTORE_SIDECAR_MEILISEARCH_APIKEY
          valueFrom:
            secretKeyRef:
              key: MEILI_MASTER_KEY
              name: {{ meilisearch_name }}
        - name: BACKUP_RESTORE_SIDECAR_MEILISEARCH_URL
          value: http://localhost:7700
{% if meilisearch_backup_restore_sidecar_encryption_key %}
        - name: BACKUP_RESTORE_SIDECAR_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              key: encryptionKey 
              name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
{% endif %}
{% if meilisearch_backup_restore_sidecar_provider == "gcp" %}
        - name: BACKUP_RESTORE_SIDECAR_GCP_PROJECT
          valueFrom:
            secretKeyRef:
              key: projectID
              name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
        - name: BACKUP_RESTORE_SIDECAR_GCP_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              key: bucketName
              name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
        - name: BACKUP_RESTORE_SIDECAR_GCP_BUCKET_LOCATION
          valueFrom:
            secretKeyRef:
              key: bucketLocation
              name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /gcp/credentials/serviceaccount.json
{% elif meilisearch_backup_restore_sidecar_provider == "s3" %}
        - name: BACKUP_RESTORE_SIDECAR_S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              key: bucketName
              name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
        - name: BACKUP_RESTORE_SIDECAR_S3_REGION
          valueFrom:
            secretKeyRef:
              key: region
              name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
        - name: BACKUP_RESTORE_SIDECAR_S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              key: endpoint
              name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
        - name: BACKUP_RESTORE_SIDECAR_S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
        - name: BACKUP_RESTORE_SIDECAR_S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
{% endif %}
        volumeMounts:
        - name: data
          mountPath: /data
        - mountPath: /backup
          name: backup
        - name: bin-provision
          subPath: backup-restore-sidecar
          mountPath: /usr/local/bin/backup-restore-sidecar
        - name: backup-restore-sidecar-config
          mountPath: /etc/backup-restore-sidecar
{% if meilisearch_backup_restore_sidecar_provider == "gcp" %}
        - name: gcp-credentials
          mountPath: /gcp/credentials
          readOnly: true
{% endif %}
      initContainers:
      - name: backup-restore-sidecar-provider
        image: {{ meilisearch_backup_restore_sidecar_image_name }}:{{ meilisearch_backup_restore_sidecar_image_tag }}
        imagePullPolicy: {{ meilisearch_backup_restore_sidecar_image_pull_policy }}
        command:
        - cp
        - /backup-restore-sidecar
        - /bin-provision
        volumeMounts:
        - name: bin-provision
          mountPath: /bin-provision
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
      - name: backup
        persistentVolumeClaim:
          claimName: backup
      - name: backup-restore-sidecar-config
        configMap:
          name: backup-restore-sidecar-config-{{ meilisearch_name }}
{% if meilisearch_backup_restore_sidecar_provider == "gcp" %}
      - name: gcp-credentials
        secret:
          secretName: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
          items:
          - key: serviceaccount.json
            path: serviceaccount.json
{% endif %}
      - name: bin-provision
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ meilisearch_storage_size }}
{% if meilisearch_storage_class %}
      storageClassName: {{ meilisearch_storage_class }}
{% endif %}
  - metadata:
      name: backup
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ meilisearch_storage_size }}
{% if meilisearch_storage_class %}
      storageClassName: {{ meilisearch_storage_class }}
{% endif %}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ meilisearch_name }}
stringData:
  MEILI_MASTER_KEY: {{ meilisearch_api_key }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ meilisearch_name }}
data:
  MEILI_ENV: {{ meilisearch_environment }}
  MEILI_NO_ANALYTICS: "{{ meilisearch_no_analytics | lower }}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-restore-sidecar-config-{{ meilisearch_name }}
data:
  config.yaml: |
    db: meilisearch
    db-data-directory: /data/data.ms/
    log-level: {{ meilisearch_backup_restore_sidecar_log_level }}
    backup-provider: {{ meilisearch_backup_restore_sidecar_provider }}
    backup-cron-schedule: "{{ meilisearch_backup_restore_sidecar_backup_cron_schedule }}"
    object-prefix: {{ meilisearch_backup_restore_sidecar_object_prefix }}
    compression-method: targz
{% if meilisearch_backup_restore_sidecar_object_max_keep %}
    object-max-keep: {{ meilisearch_backup_restore_sidecar_object_max_keep }}
{% endif %}
    post-exec-cmds:
      - meilisearch --db-path=/data/data.ms/ --dump-dir=/backup/upload/files
---
apiVersion: v1
kind: Secret
metadata:
  name: backup-restore-sidecar-backup-provider-config-{{ meilisearch_name }}
type: Opaque
data:
{% if meilisearch_backup_restore_sidecar_provider == "gcp" %}
  bucketName: {{ meilisearch_backup_restore_sidecar_gcp_bucket_name | b64encode }}
  bucketLocation: {{ meilisearch_backup_restore_sidecar_gcp_backup_location | b64encode }}
  projectID: {{ meilisearch_backup_restore_sidecar_gcp_project_id | b64encode }}
  serviceaccount.json: {{ meilisearch_backup_restore_sidecar_gcp_serviceaccount_json | to_json | b64encode }}
{% elif meilisearch_backup_restore_sidecar_provider == "s3" %}
  bucketName: {{ meilisearch_backup_restore_sidecar_s3_bucket_name | b64encode }}
  region: {{ meilisearch_backup_restore_sidecar_s3_region | b64encode }}
  endpoint: {{ meilisearch_backup_restore_sidecar_s3_endpoint | b64encode }}
  accessKey: {{ meilisearch_backup_restore_sidecar_s3_access_key | b64encode }}
  secretKey: {{ meilisearch_backup_restore_sidecar_s3_secret_key | b64encode }}
{% endif %}
{% if meilisearch_backup_restore_sidecar_encryption_key %}
  encryptionKey: {{ meilisearch_backup_restore_sidecar_encryption_key | b64encode }}
{% endif %}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: {{ meilisearch_name }}
  name: {{ meilisearch_name }}
spec:
  ports:
  - name: "7700"
    port: 7700
    targetPort: 7700
  - name: metrics
    port: 2112
    targetPort: 2112
  selector:
    app: {{ meilisearch_name }}
