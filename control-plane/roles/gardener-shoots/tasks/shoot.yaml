---
- name: Get kubeconfig for virtual garden access
  virtual_garden_kubeconfig:
    garden_name: "{{ gardener_shoots_garden_name }}"

- name: Add shoot provider secret
  k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ _config.name }}-provider-secret"
        namespace: "{{ _config.namespace }}"
        labels:
          cloudprofile.garden.sapcloud.io/name: metal
      type: Opaque
      data:
        metalAPIHMac: "{{ gardener_shoot_default_metal_api_hmac | b64encode }}"
    kubeconfig: "{{ virtual_garden_kubeconfig }}"
    apply: true

- name: Add shoot secret binding
  k8s:
    definition:
      apiVersion: core.gardener.cloud/v1beta1
      kind: SecretBinding
      metadata:
        labels:
          cloudprofile.garden.sapcloud.io/name: metal
        name: "{{ _config.name }}-provider-secret"
        namespace: "{{ _config.namespace }}"
      secretRef:
        name: "{{ _config.name }}-provider-secret"
        namespace: "{{ _config.namespace }}"
      provider:
        type: metal
    kubeconfig: "{{ virtual_garden_kubeconfig }}"
    apply: true

- name: Deploy audit policy config map
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: audit-policy-{{ _config.name }}
        namespace: "{{ _config.namespace }}"
      type: Opaque
      data:
        policy: "{{ _config.audit_policy }}"
    apply: true
    kubeconfig: "{{ virtual_garden_kubeconfig }}"
  when: "'audit_policy' in _config"

- name: Deploy structured auth config map
  k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: authentication-config-{{ _config.name }}
        namespace: "{{ _config.namespace }}"
      type: Opaque
      data:
        policy: "{{ _config.structured_auth_config }}"
    apply: true
    kubeconfig: "{{ virtual_garden_kubeconfig }}"
  when: "'structured_auth_config' in _config"

- name: Deploy shoot
  k8s:
    definition: "{{ lookup('template', 'shoot.yaml.j2') }}"
    kubeconfig: "{{ virtual_garden_kubeconfig }}"
    apply: true

- name: Wait until shoot reconciled
  k8s_info:
    api_version: core.gardener.cloud/v1beta1
    kind: Shoot
    name: "{{ _config.name }}"
    namespace: "{{ _config.namespace }}"
    kubeconfig: "{{ virtual_garden_kubeconfig }}"
  register: _shoot_rollout
  until: _shoot_rollout.resources[0].get('status', {}).get('lastOperation', {}).get('state', '') == "Succeeded"
  retries: "{{ gardener_shoot_rollout_wait_retries }}"
  delay: "{{ gardener_shoot_rollout_wait_delay }}"
  when: gardener_shoot_rollout_wait_enabled
