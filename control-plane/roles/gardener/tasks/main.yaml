---
- name: Gather release versions
  setup_yaml:

- name: Check mandatory variables for this role are set
  assert:
    fail_msg: "not all mandatory variables given, check role documentation"
    quiet: yes
    that:
      - gardener_repo_url is defined
      - gardener_repo_ref is defined
      - gardener_gardenlet_image_tag is defined
      - gardener_gardenlet_image_name is defined
      - gardener_etcd_repo_ref is defined
      - gardener_apiserver_image_tag is defined
      - gardener_controller_manager_image_tag is defined
      - gardener_scheduler_image_tag is defined
      - gardener_extension_provider_metal_image_tag is defined
      - gardener_os_controller_image_tag is defined
      - metal_cloud_controller_manager_image_tag is defined
      - gardener_extension_networking_calico_image_tag is defined
      - csi_lvm_controller_image_tag is defined
      - csi_lvm_provisioner_image_tag is defined
      - gardener_api_server_ca is not none
      - gardener_api_server_ca_key is not none
      - gardener_api_server_cert is not none
      - gardener_api_server_key is not none
      - gardener_api_server_client_cert is not none
      - gardener_api_server_client_key is not none
      - gardener_kube_aggregator_client_cert is not none
      - gardener_kube_aggregator_client_key is not none
      - gardener_kube_controller_manager_client_cert is not none
      - gardener_kube_controller_manager_client_key is not none
      - gardener_admin_client_cert is not none
      - gardener_admin_client_key is not none
      - gardener_service_account_client_key is not none
      - gardener_admission_controller_ca is not none
      - gardener_admission_controller_cert is not none
      - gardener_admission_controller_key is not none
      - gardener_controller_manager_ca is not none
      - gardener_controller_manager_cert is not none
      - gardener_controller_manager_key is not none
      - gardener_admission_metal_ca is not none
      - gardener_admission_metal_cert is not none
      - gardener_admission_metal_key is not none
      - gardener_etcd_ca_cert is not none
      - gardener_etcd_cert is not none
      - gardener_etcd_cert_key is not none
      - gardener_etcd_client_cert is not none
      - gardener_etcd_client_key is not none
      - gardener_virtual_api_server_public_dns is not none
      - gardener_virtual_api_server_healthcheck_static_token is not none
      - gardener_dns_domain is not none
      - gardener_dns_provider is not none
      - gardener_cloud_profile_metal_api_url is not none
      - gardener_cloud_profile_metal_api_hmac is not none
      - gardener_backup_infrastructure_secret is none or (gardener_backup_infrastructure is not none and gardener_backup_infrastructure.provider in ["gcp", "S3"])
      - gardener_cert_management_issuer_email is not none

- name: Deploy required Seed CRDs
  k8s:
    definition: "{{ item.definition }}"
    apply: yes
  loop:
    - name: vpas
      definition: "{{ (lookup('url', 'https://raw.githubusercontent.com/gardener/gardener/' + gardener_repo_ref + '/example/seed-crds/10-crd-autoscaling.k8s.io_verticalpodautoscalers.yaml', split_lines=False) | from_yaml_all | list)[0] }}"
  loop_control:
    label: "{{ item.name }}"

- name: Create garden namespace
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: garden

- name: Fail when provider unsupported
  fail:
    msg: "provider is unsupported: {{ metal_control_plane_host_provider }}"
  when:
    - metal_control_plane_host_provider not in ["gcp", "metal"]

- name: GCP control plane service cidr
  import_tasks: control-plane-networks/gcp.yaml
  when:
    - metal_control_plane_host_provider == "gcp"

- name: metal control plane service cidr
  import_tasks: control-plane-networks/metal.yaml
  when:
    - metal_control_plane_host_provider == "metal"

- name: Deploy virtual garden
  import_tasks: virtual_garden.yaml

- name: Deploy Gardener
  import_tasks: gardener.yaml

- name: Register admission controllers
  import_tasks: admission_controllers.yaml

- name: Add Metal cloud profile
  k8s:
    definition: "{{ lookup('template', '30-cloud-profile-metal.yaml') }}"
    kubeconfig: "{{ gardener_kube_apiserver_kubeconfig_path }}"
    apply: yes
  register: result
  until: result is success
  retries: 10
  delay: 6

- name: Register extension controllers
  import_tasks: extensions.yaml

- name: Register control plane as seed
  import_tasks: seed.yaml

- name: Create Gardener project for shooted seeds
  k8s:
    definition: "{{ lookup('template', 'gardener-soil-project.yaml.j2') }}"
    kubeconfig: "{{ gardener_kube_apiserver_kubeconfig_path }}"
    apply: true

- name: Add project labels to garden namespace
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        labels:
          gardener.cloud/role: "project"
          project.gardener.cloud/name: "{{ gardener_soil_name }}"
        name: garden
    kubeconfig: "{{ gardener_kube_apiserver_kubeconfig_path }}"

- name: Add provider secret for shoot clusters
  k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "metal-provider-secret"
        namespace: garden
        labels:
          cloudprofile.garden.sapcloud.io/name: metal
      type: Opaque
      data:
        metalAPIHMac: "{{ gardener_cloud_profile_metal_api_hmac | b64encode }}"
    kubeconfig: "{{ gardener_kube_apiserver_kubeconfig_path }}"
    apply: yes

- name: Loop over shooted seeds
  include_tasks: shooted_seed.yaml
  loop: "{{ gardener_shooted_seeds }}"
  loop_control:
    loop_var: gardener_shooted_seed
    label: "{{ gardener_shooted_seed.name }}"
