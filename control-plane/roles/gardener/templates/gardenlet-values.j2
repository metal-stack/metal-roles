image:
  repository: {{ gardener_gardenlet_image_name }}
  tag: {{ gardener_gardenlet_image_tag }}
  pullPolicy: Always
config:
  gardenClientConnection:
    gardenClusterAddress: {{ (lookup('file', gardener_kube_apiserver_kubeconfig) | from_yaml).get("clusters")[0]["cluster"]["server"] }}
    gardenClusterCACert: {{ (lookup('file', gardener_kube_apiserver_kubeconfig) | from_yaml).get("clusters")[0]["cluster"]["certificate-authority-data"] }}
    kubeconfig: |
      {{ lookup('file', gardener_kube_apiserver_kubeconfig) | indent(width=6, first=false) }}

  controllers:
    backupEntry:
      deletionGracePeriodHours: 72
      deletionGracePeriodShootPurposes:
      - evaluation
      - infrastructure
      - production
    shoot:
      concurrentSyncs: {{ gardener_seed.concurrent_syncs | default(20) }}
      reconcileInMaintenanceOnly: {{ True if lookup('env', 'RECONCILE_IN_MAINTENANCE_ONLY',) else gardener_seed.reconcile_in_maintenance_only | default(false) }}
      # allow setting shoot ignore annotation
      respectSyncPeriodOverwrite: true

  seedConfig:
    apiVersion: core.gardener.cloud/v1beta1
    kind: Seed
    metadata:
      name: {{ gardener_seed.name }}
      labels:
        name: {{ gardener_seed.name }}
    spec:
      provider:
        type: gcp
        region: local
      secretRef:
        name: gardener-seed-kubeconfig
        namespace: garden
      dns:
        provider:
          secretRef:
            name: {{ lookup('k8s', kubeconfig=gardener_kube_apiserver_kubeconfig, api_version='v1', kind='Secret', namespace='garden', label_selector='gardener.cloud/role=internal-domain').get('metadata', {}).get('name') }}
            namespace: garden
          type: {{ gardener_dns_provider }}
      ingress:
        controller:
          kind: nginx
        domain: {{ gardener_dns_domain }}
      networks:
        nodes: "{{ seed_node_cidr }}"
        pods: "{{ seed_pod_cidr }}"
        services: "{{ seed_service_cidr }}"
      backup: {{ gardener_backup_infrastructure | to_json }}
      blockCIDRs: []
      settings:
        excessCapacityReservation:
          enabled: false
        scheduling:
          visible: false
        shootDNS:
          enabled: true
        verticalPodAutoscaler:
          enabled: {{ gardener_seed.vertical_pod_autoscaler_enabled | default(true) }}
      taints:
      - key: seed.gardener.cloud/protected
      - key: seed.gardener.cloud/invisible
      - key: seed.gardener.cloud/disable-capacity-reservation

  featureGates:
    ManagedIstio: true
    HVPA: false
    HVPAForShootedSeed: false

vpa: true

{% if gardener_image_vector_overwrite %}
imageVectorOverwrite: |
  images:
  {{ gardener_image_vector_overwrite | to_yaml | indent(width=2, first=false) }}
{% endif %}
{% if gardener_component_image_vector_overwrite %}
componentImageVectorOverwrites: |
  {{ gardener_component_image_vector_overwrite | to_yaml | indent(width=2, first=false) }}
{% endif %}