---
- name: Gather release versions
  setup_yaml:

- name: Check mandatory variables for this role are set
  assert:
    fail_msg: "not all mandatory variables given, check role documentation"
    quiet: yes
    that:
      - metal_api_image_name is defined
      - metal_api_image_tag is defined
      - metal_metalctl_image_name is defined
      - metal_metalctl_image_tag is defined
      - metal_masterdata_api_image_name is defined
      - metal_masterdata_api_image_tag is defined
      - metal_masterdata_api_tls_ca is defined
      - metal_masterdata_api_tls_cert is defined
      - metal_masterdata_api_tls_cert_key is defined
      - metal_masterdata_api_tls_client_cert is defined
      - metal_masterdata_api_tls_client_key is defined
      - metal_console_image_name is defined
      - metal_console_image_tag is defined
      - metal_helm_chart_local_path is not none or metal_helm_chart_repo is defined
      - metal_helm_chart_local_path is not none or metal_helm_chart_version is defined
      - not metal_api_s3_enabled or metal_api_s3_address is not none

- name: Create variable from command
  command: "echo Hello"
  register: command_output

- debug: msg="{{command_output.stdout}}"

- name: Count pods in headscale namespace
  raw: kubectl get pods -n {{ headscale_namespace }} | wc -l
  register: headscale_count
  when: headscale_enabled | bool
  
- name: Setup headscale API key
  raw:  kubectl exec $(kubectl get pods -n {{ headscale_namespace }} --no-headers=true -o custom-columns=":metadata.name" | head -n1) -n {{ headscale_namespace }} -- headscale apikeys create -e 365d  | tail -n1
  register: headscale_api_key
  when: 
    - headscale_enabled | bool
    - headscale_count.stdout | int > 1

- name: Deploy metal control plane
  include_role:
    name: ansible-common/roles/helm-chart
  vars:
    helm_repo: "{{ metal_helm_chart_repo | default(omit) }}"
    helm_chart_version: "{{ metal_helm_chart_version | default(omit) }}"
    helm_chart_custom_folder: "{{ metal_helm_chart_local_path | default(omit) }}"
    helm_chart: "{{ './' if metal_helm_chart_local_path is not none }}metal-control-plane"
    helm_release_name: metal-control-plane
    helm_target_namespace: "{{ metal_control_plane_namespace }}"
    helm_value_file_template: metal-values.j2
    # deployment can take a while due to post install hooks, therefore increasing the timeout for this chart...
    helm_timeout: "{{ metal_helm_chart_timeout }}"
    helm_chart_inject_config_hash: yes

# for automation tests, we need to wait until all the services are ready...
- name: Wait until api is available
  uri:
    url: "{{ metal_check_api_health_endpoint }}"
    follow_redirects: safe
    status_code: 200
    validate_certs: no
  register: result
  until: result is success
  retries: 60
  delay: 10
  when: metal_check_api_available
