apiVersion: v1
kind: ServiceAccount
metadata:
  name: chrony
  labels:
    app.kubernetes.io/name: chrony
    app.kubernetes.io/component: ntp
    app.kubernetes.io/part-of: isolated-clusters
    app.kubernetes.io/managed-by: ansible
    app.kubernetes.io/part-of: "{{ isolated_clusters_group_label }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: chrony
    app.kubernetes.io/component: ntp
    app.kubernetes.io/part-of: isolated-clusters
    app.kubernetes.io/managed-by: ansible
    app.kubernetes.io/part-of: "{{ isolated_clusters_group_label }}"
  name: chrony
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: chrony
      app.kubernetes.io/component: ntp
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chrony
        app.kubernetes.io/component: ntp
        app.kubernetes.io/part-of: isolated-clusters
        app.kubernetes.io/managed-by: ansible
        app.kubernetes.io/part-of: "{{ isolated_clusters_group_label }}"
    spec:
      containers:
      - name: chrony
        ports:
        - containerPort: 123
          name: ntp
          protocol: UDP
        image: "{{ isolated_clusters_ntp_image_name }}:{{ isolated_clusters_ntp_image_tag }}"
        imagePullPolicy: {{ metal_control_plane_image_pull_policy }}
        livenessProbe:
          exec:
            command:
            - /usr/bin/chronyc
            - -n
            - tracking
          initialDelaySeconds: 10
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - /usr/bin/chronyc
            - -n
            - tracking
          initialDelaySeconds: 10
          failureThreshold: 10
          timeoutSeconds: 5
        volumeMounts:
        - mountPath: /etc/chrony
          name: chrony-conf
        - mountPath: /var/lib/chrony
          name: chrony-varlib
        - mountPath: /run/chrony
          name: chrony-run
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_BIND_SERVICE
            - SETGID
            - SETUID
            drop:
            - ALL
          readOnlyRootFilesystem: true
      serviceAccount: chrony
      serviceAccountName: chrony
      terminationGracePeriodSeconds: 30
      securityContext:
        fsGroup: 101
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - chrony
              topologyKey: "kubernetes.io/hostname"
      volumes:
      - configMap:
          name: chrony-conf
        name: chrony-conf
      - emptyDir: {}
        name: chrony-varlib
      - emptyDir: {}
        name: chrony-run
