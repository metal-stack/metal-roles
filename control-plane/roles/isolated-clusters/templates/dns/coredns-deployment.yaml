apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  labels:
    app.kubernetes.io/name: coredns
    app.kubernetes.io/component: dns
    app.kubernetes.io/part-of: isolated-clusters
    app.kubernetes.io/managed-by: ansible
    app.kubernetes.io/part-of: "{{ isolated_clusters_group_label }}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: coredns
    app.kubernetes.io/component: dns
    app.kubernetes.io/part-of: isolated-clusters
    app.kubernetes.io/managed-by: ansible
    app.kubernetes.io/part-of: "{{ isolated_clusters_group_label }}"
  name: coredns
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: coredns
      app.kubernetes.io/component: dns
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: coredns
        app.kubernetes.io/component: dns
        app.kubernetes.io/part-of: isolated-clusters
        app.kubernetes.io/managed-by: ansible
        app.kubernetes.io/part-of: "{{ isolated_clusters_group_label }}"
    spec:
      containers:
      - args:
        - -conf
        - /etc/coredns/Corefile
        env:
        image: "{{ isolated_clusters_dns_image_name }}:{{ isolated_clusters_dns_image_tag }}"
        imagePullPolicy: {{ metal_control_plane_image_pull_policy }}
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: coredns
        ports:
        - containerPort: 8053
          name: dns-udp
          protocol: UDP
        - containerPort: 8053
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            memory: 1500Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
            add:
            - NET_BIND_SERVICE
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
      securityContext:
        fsGroup: 1
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
        supplementalGroups:
        - 1
      serviceAccount: coredns
      serviceAccountName: coredns
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - coredns
              topologyKey: "kubernetes.io/hostname"
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: Corefile
            path: Corefile
          name: coredns
        name: config-volume
