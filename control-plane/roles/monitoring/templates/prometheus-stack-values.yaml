---
prometheus:
  ingress:
    enabled: {{ monitoring_prometheus_ingress_enabled }}
    ingressClassName: nginx
    hosts:
      - {{ monitoring_prometheus_ingress_dns }}
{% if monitoring_additional_ingress_annotations %}
    annotations:
{% for key, value in monitoring_additional_ingress_annotations.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if monitoring_prometheus_image_tag is defined %}
  prometheusSpec:
    image:
      tag: "{{ monitoring_prometheus_image_tag }}"
{% endif %}

grafana:
  adminPassword: {{ monitoring_grafana_admin_password }}
  defaultDashboardsTimezone: {{ monitoring_grafana_dashboard_timezone }}

  additionalDataSources: {{ monitoring_grafana_additional_datasources | to_json }}

  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - {{ monitoring_grafana_ingress_dns }}
{% if monitoring_additional_ingress_annotations %}
    annotations:
{% for key, value in monitoring_additional_ingress_annotations.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
alertmanager:
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: "{{ monitoring_slack_channel_url }}"
    route:
      group_wait: 2m
      group_interval: 15m
      group_by: ['...']
      repeat_interval: 120h
      receiver: 'null'
      routes:
        - match_re:
            severity: 'critical'
          receiver: 'alertlogger'
          continue: true
        - match_re:
            job: '.*'
          receiver: 'alertlogger'
          continue: true
        - match_re:
            severity: 'critical'
          receiver: 'slack'
    inhibit_rules:
    - source_match:
        alertname: 'Watchdog'
    receivers:
    - name: 'slack'
      slack_configs:
      - channel: {{monitoring_slack_channel}}
        send_resolved: true
    - name: 'null'
    - name: 'alertlogger'
      webhook_configs:
        - url: http://alertlogger:5001

kubeProxy:
  enabled: false

kubeScheduler:
  enabled: false

kubeEtcd:
  enabled: false

kubeControllerManager:
  enabled: false
