---
prometheus:
  ingress:
    enabled: {{ monitoring_prometheus_ingress_enabled }}
    ingressClassName: nginx
    hosts:
      - {{ monitoring_prometheus_ingress_dns }}
{% if monitoring_additional_ingress_annotations %}
    annotations:
{% for key, value in monitoring_additional_ingress_annotations.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if monitoring_prometheus_image_tag is defined %}
  prometheusSpec:
    image:
      tag: "{{ monitoring_prometheus_image_tag }}"
{% endif %}

grafana:
  adminPassword: {{ monitoring_grafana_admin_password }}
  defaultDashboardsTimezone: {{ monitoring_grafana_dashboard_timezone }}

  additionalDataSources: {{ monitoring_grafana_additional_datasources | to_json }}

  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - {{ monitoring_grafana_ingress_dns }}
{% if monitoring_additional_ingress_annotations %}
    annotations:
{% for key, value in monitoring_additional_ingress_annotations.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
alertmanager:
  alertmanagerSpec:
    logLevel: debug
  config:
    global:
      resolve_timeout: 5m
      slack_api_url: "{{ monitoring_slack_channel_url }}"
    inhibit_rules: []
    route:
      group_by: ['namespace'] 
      group_wait: 30s
      group_interval: 30s
      repeat_interval: 30s
      receiver: 'slack'
      routes:
      - receiver: 'null'
        matchers:
          - alertname=~"Watchdog|InfoInhibitor"
      - match: 
          team: slack 
        receiver: slack 
        continue: true 
    receivers:
    - name: 'null'
    - name: 'slack'
      slack_configs:
      - channel: "{{ monitoring_slack_channel }}"
        send_resolved: true
    - name: 'alertlogger'
      webhook_configs:
        - url: http://alertlogger:5001
    templates:
    - '/etc/alertmanager/config/*.tmpl'



kubeProxy:
  enabled: false

kubeScheduler:
  enabled: false

kubeEtcd:
  enabled: false

kubeControllerManager:
  enabled: false
