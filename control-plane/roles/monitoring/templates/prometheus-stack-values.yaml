---
prometheus:
  ingress:
    enabled: {{ monitoring_prometheus_ingress_enabled }}
    ingressClassName: nginx
    hosts:
      - {{ monitoring_prometheus_ingress_dns }}
{% if monitoring_additional_ingress_annotations %}
    annotations:
{% for key, value in monitoring_additional_ingress_annotations.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}

{% if monitoring_prometheus_image_tag is defined %}
  prometheusSpec:
    image:
      tag: "{{ monitoring_prometheus_image_tag }}"
{% endif %}

grafana:
  adminPassword: {{ monitoring_grafana_admin_password }}
  defaultDashboardsTimezone: {{ monitoring_grafana_dashboard_timezone }}

  additionalDataSources: {{ monitoring_grafana_additional_datasources | to_json }}

  ingress:
    enabled: true
    ingressClassName: nginx
    hosts:
      - {{ monitoring_grafana_ingress_dns }}
{% if monitoring_additional_ingress_annotations %}
    annotations:
{% for key, value in monitoring_additional_ingress_annotations.items() %}
      {{ key }}: "{{ value }}"
{% endfor %}
{% endif %}
alertmanager:
  enabled: true
  config:
    global:
      slack_api_url: {{monitoring_slack_channel_url}}
    route:
      group_by: ['pod_name', 'alertname']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack-notifications'
      routes:
      - match_re:
          pod_name: '^k8s_.*'
        receiver: 'slack-k8s'
      - match_re:
          pod_name: '^etcd_.*'
        receiver: 'slack-etcd'

    receivers:
    - name: 'slack-notifications'
      slack_configs:
      - channel: '#alerts'
    - name: 'slack-k8s'
      slack_configs:
      - channel: '#k8s-alerts'
    - name: 'slack-etcd'
      slack_configs:
      - channel: '#etcd-alerts'

    inhibit_rules:
    - source_match:
        pod_name: '^k8s_.*'
        alertname: 'HighCPUUsage'
      target_match:
        pod_name: '^etcd_.*'
        alertname: 'NodeDown'
      equal: ['node']


kubeProxy:
  enabled: false

kubeScheduler:
  enabled: false

kubeEtcd:
  enabled: false

kubeControllerManager:
  enabled: false
