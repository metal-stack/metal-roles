---
- name: Create namespace {{ metal_monitoring_namespace }}
  k8s:
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ metal_monitoring_namespace }}"
        labels:
          name: "{{ metal_monitoring_namespace }}"

- name: Deploy prometheus-stack
  include_role:
    name: ansible-common/roles/helm-chart
  vars:
    helm_repo: "https://prometheus-community.github.io/helm-charts"
    helm_chart: kube-prometheus-stack
    helm_target_namespace: monitoring
    helm_release_name: kube-prometheus-stack
    helm_value_file_template: "prometheus-stack-values.yaml"


- name: Deploy Grafana
  k8s:
    state: present
    definition: "{{ lookup('template', 'grafana_dashboards/' + item) }}"
    namespace: "{{ metal_monitoring_namespace }}"
  loop:
    - go-processes.yaml
    - metal-api.yaml

- name: Deploy metal-metrics-exporter
  k8s:
    definition: "{{ lookup('template', 'metal-metrics-exporter/' + item) }}"
    namespace: monitoring
  loop:
    - metal-metrics-exporter-secret.yaml
    - metal-metrics-exporter-deployment.yaml
    - metal-metrics-exporter-service.yaml


# - name: Create monitoring ingress for grafana
#   k8s:
#     definition: "{{ lookup('template', item) }}"
#     namespace: monitoring
#   loop:
#      - grafana_ingress.yaml
#      - loki_ingress.yaml
#      - alerts_ingress.yaml
#      - prom_ingress.yaml

# Stores logs
- name: Deploy loki-stack
  include_role:
    name: ansible-common/roles/helm-chart
  vars:
    helm_repo: "https://grafana.github.io/helm-charts"
    helm_chart: loki-stack
    helm_target_namespace: monitoring
    helm_release_name: loki-stack
    helm_value_file_template: "loki-stack-values.yaml"


# Set up alerting rules for Loki 
- name: Deploy Alertmanager
  k8s:
    state: present
    definition: "{{ lookup('template', 'grafana_dashboards/' 'alertmanager.yaml') }}"
    namespace: monitoring


- name: Deploy metal-metrics-exporter
  k8s:
    definition: "{{ lookup('template', 'metal-metrics-exporter/' + item) }}"
    namespace: monitoring
  loop:
    - metal-metrics-exporter-secret.yaml
    - metal-metrics-exporter-deployment.yaml
    - metal-metrics-exporter-service.yaml
    - metal-metrics-exporter-servicemonitor.yaml


- name: Deploy service monitors
  k8s:
    definition: "{{ lookup('template', 'servicemonitors/' + item) }}"
    namespace: monitoring
  loop:
    - metal-metrics-exporter-servicemonitor.yaml
    - metal_api_servicemonitor.yaml
    - metal_db_servicemonitor.yaml
    - masterdata_api_servicemonitor.yaml
    - masterdata_db_servicemonitor.yaml
    - ipam_db_servicemonitor.yaml



- name: Deploy alerting rules
  k8s:
    definition: "{{ lookup('template', 'rules/' + item) }}"
    namespace: monitoring
  loop:
    # - partition-rules.yaml
    # - shoot-operation-rules.yaml
    # - seed-rules.yaml
    - db-backup-rules.yaml
    - metal-api-rules.yaml
    # - keycloak-rules.yaml
    # - thanos-rules.yaml


# #Pulls the logs from Loki
# - name: Deploy Promtail
#   include_role:
#     name: ansible-common/roles/helm-chart
#   vars:
#     helm_repo: "https://grafana.github.io/helm-charts"
#     helm_chart: "promtail"
#     helm_release_name: promtail
#     helm_target_namespace: monitoring
#     helm_value_file_template: "{{ lookup('template' , 'loki', 'promtail_values.yaml') }}"
#     helm_wait: false
#     helm_timeout: 1200s
