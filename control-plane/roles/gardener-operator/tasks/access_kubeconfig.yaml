---
# access to the virtual garden can be done by a rotated kubeconfig through the gardener resource manager
# https://github.com/gardener/gardener/blob/master/docs/concepts/operator.md#virtual-garden-kubeconfig

- name: Create virtual garden access secret
  k8s:
    apply: yes
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: shoot-access-virtual-garden
        namespace: garden
        labels:
          resources.gardener.cloud/purpose: token-requestor
          resources.gardener.cloud/class: shoot
        annotations:
          serviceaccount.resources.gardener.cloud/name: virtual-garden-user
          serviceaccount.resources.gardener.cloud/namespace: kube-system
          serviceaccount.resources.gardener.cloud/token-expiration-duration: 3h

- name: Create virtual garden access managed resource secret
  k8s:
    apply: yes
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: managedresource-virtual-garden-access
        namespace: garden
      type: Opaque
      stringData:
        clusterrolebinding____gardener.cloud.virtual-garden-access.yaml: |
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: gardener.cloud.sap:virtual-garden
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
          - kind: ServiceAccount
            name: virtual-garden-user
            namespace: kube-system

- name: Create virtual garden access managed resource
  k8s:
    apply: yes
    definition:
      apiVersion: resources.gardener.cloud/v1alpha1
      kind: ManagedResource
      metadata:
        name: virtual-garden-access
        namespace: garden
      spec:
        secretRefs:
        - name: managedresource-virtual-garden-access

- name: Create kubeconfig for accessing the virtual garden
  set_fact:
    _virtual_garden_kubeconfig: "{{ '' | virtual_garden_kubeconfig(wait=600) }}"

# before we can continue, the virtual garden api server has to be up and running
- name: Wait for the virtual garden access
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Namespace
    name: garden
    kubeconfig: "{{ _virtual_garden_kubeconfig }}"
    wait: yes
    wait_timeout: 300

# - name: Write access kubeconfig template into secret
#   k8s:
#     apply: yes
#     definition:
#       apiVersion: v1
#       kind: Secret
#       metadata:
#         name: virtual-garden-access-kubeconfig-tpl
#         namespace: garden
#       data:
#         kubeconfig: "{{ _virtual_garden_kubeconfig | to_nice_yaml | b64encode }}"
