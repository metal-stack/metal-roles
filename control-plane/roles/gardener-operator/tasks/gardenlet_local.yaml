---
- name: Fetch current seed cidrs
  set_fact:
    _gardener_current_soil_node_cidr: "{{ (lookup('k8s', kubeconfig=_virtual_garden_kubeconfig, api_version='core.gardener.cloud/v1beta1', kind='Seed', resource_name=gardener_soil_name) | default({}, true)).get('spec', {}).get('networks', {}).get('nodes', none) }}"
    _gardener_current_soil_pod_cidr: "{{ (lookup('k8s', kubeconfig=_virtual_garden_kubeconfig, api_version='core.gardener.cloud/v1beta1', kind='Seed', resource_name=gardener_soil_name) | default({}, true)).get('spec', {}).get('networks', {}).get('pods', none) }}"
    _gardener_current_soil_service_cidr: "{{ (lookup('k8s', kubeconfig=_virtual_garden_kubeconfig, api_version='core.gardener.cloud/v1beta1', kind='Seed', resource_name=gardener_soil_name) | default({}, true)).get('spec', {}).get('networks', {}).get('services', none) }}"

- name: Set cidrs for seed
  set_fact:
    _gardener_gardenlet_node_cidr: "{{ _gardener_current_soil_node_cidr if _gardener_current_soil_node_cidr else _gardener_soil_node_cidr }}"
    _gardener_gardenlet_pod_cidr: "{{ _gardener_current_soil_pod_cidr if _gardener_current_soil_pod_cidr else _gardener_soil_pod_cidr }}"
    _gardener_gardenlet_service_cidr: "{{ _gardener_current_soil_service_cidr if _gardener_current_soil_service_cidr else _gardener_soil_service_cidr }}"

- name: Deploy Local Gardenlet
  k8s:
    kubeconfig: "{{ _virtual_garden_kubeconfig }}"
    apply: true
    definition: "{{ lookup('template', 'gardenlet-local.yaml') }}"


# image:
#   repository: {{ gardener_gardenlet_image_name }}
#   tag: {{ gardener_gardenlet_image_tag }}
#   pullPolicy: {{ metal_control_plane_image_pull_policy }}
# config:
#   gardenClientConnection:
#     gardenClusterAddress: {{ (lookup('file', gardener_kube_apiserver_kubeconfig_path) | from_yaml).get("clusters")[0]["cluster"]["server"] }}
#     gardenClusterCACert: {{ (lookup('file', gardener_kube_apiserver_kubeconfig_path) | from_yaml).get("clusters")[0]["cluster"]["certificate-authority-data"] }}
#     kubeconfig: |
#       {{ lookup('file', gardener_kube_apiserver_kubeconfig_path) | indent(width=6, first=false) }}

#   controllers:
#     backupEntry:
#       deletionGracePeriodHours: {{ gardener_gardenlet_backup_entry_deletion_grace_period_hours }}
#       deletionGracePeriodShootPurposes:
#       - evaluation
#       - infrastructure
#       - production
#     shoot:
#       concurrentSyncs: {{ gardener_gardenlet_shoot_concurrent_syncs }}
#       reconcileInMaintenanceOnly: {{ gardener_gardenlet_shoot_reconcile_in_maintenance_only }}
#       # allow setting shoot ignore annotation:
#       respectSyncPeriodOverwrite: {{ gardener_gardenlet_shoot_respect_sync_period_overwrite }}

# {% if gardener_logging_enabled %}
#   logging:
#     enabled: true
#     vali:
#       enabled: {{ gardener_logging_vali_enabled | lower }}
# {% endif %}

#   seedConfig:


#   featureGates: {{ gardener_gardenlet_feature_gates | to_json }}

# vpa: {{ gardener_soil_vertical_pod_autoscaler_enabled }}
