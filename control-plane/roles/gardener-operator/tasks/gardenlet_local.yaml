---
- name: Fetch current seed cidrs
  set_fact:
    _gardener_current_soil_node_cidr: "{{ (lookup('k8s', kubeconfig=_virtual_garden_kubeconfig, api_version='core.gardener.cloud/v1beta1', kind='Seed', resource_name=gardener_soil_name) | default({}, true)).get('spec', {}).get('networks', {}).get('nodes', none) }}"
    _gardener_current_soil_pod_cidr: "{{ (lookup('k8s', kubeconfig=_virtual_garden_kubeconfig, api_version='core.gardener.cloud/v1beta1', kind='Seed', resource_name=gardener_soil_name) | default({}, true)).get('spec', {}).get('networks', {}).get('pods', none) }}"
    _gardener_current_soil_service_cidr: "{{ (lookup('k8s', kubeconfig=_virtual_garden_kubeconfig, api_version='core.gardener.cloud/v1beta1', kind='Seed', resource_name=gardener_soil_name) | default({}, true)).get('spec', {}).get('networks', {}).get('services', none) }}"

- name: Set cidrs for seed
  set_fact:
    _gardener_gardenlet_node_cidr: "{{ _gardener_current_soil_node_cidr if _gardener_current_soil_node_cidr else _gardener_soil_node_cidr }}"
    _gardener_gardenlet_pod_cidr: "{{ _gardener_current_soil_pod_cidr if _gardener_current_soil_pod_cidr else _gardener_soil_pod_cidr }}"
    _gardener_gardenlet_service_cidr: "{{ _gardener_current_soil_service_cidr if _gardener_current_soil_service_cidr else _gardener_soil_service_cidr }}"

- name: Deploy Local Gardenlet
  k8s:
    kubeconfig: "{{ _virtual_garden_kubeconfig }}"
    apply: true
    definition: "{{ lookup('template', 'gardenlet-local.yaml') }}"

# - name: Wait Gardenlet to be reconciled
#   kubernetes.core.k8s_info:
#     api_version: seedmanagement.gardener.cloud/v1alpha1
#     kind: Gardenlet
#     name: "{{ gardener_soil_name }}"
#     namespace: garden
#     kubeconfig: "{{ _virtual_garden_kubeconfig }}"
#     wait: yes
#     wait_condition:
#       reason: Reconciled
#       status: "True"
#       type: GardenletReconciled
#     wait_timeout: 300
