---
gardener_image_vector_overwrite:
gardener_component_image_vector_overwrite:

gardener_operator_enabled: false

gardener_apiserver_replicas: 1
gardener_apiserver_vpa: true
gardener_apiserver_feature_gates: {}
gardener_apiserver_shoot_kubeconfig_max_expiration: "8760h"

gardener_apiserver_resources:
  requests:
    cpu: 100m
    memory: 100Mi
  limits:
    cpu: 400m
    memory: 1Gi

gardener_controller_manager_resources:
  requests:
    cpu: 100m
    memory: 100Mi
  limits:
    cpu: 750m
    memory: 512Mi

gardener_scheduler_resources:
  requests:
    cpu: 50m
    memory: 50Mi
  limits:
    cpu: 300m
    memory: 256Mi

gardener_dns_domain:
gardener_dns_provider:

gardener_backup_infrastructure:
  provider: local
  bucket: gardener-operator

  # provider: gcp
  # region:
  # secretRef:
  #  name: backup-secret
  #  namespace: garden
  # bucket:
  #
  # provider: S3
  # endpoint: "{{ gardener_backup_infrastructure_secret.endpoint | b64decode }}"
  # accessKeyID: "{{ gardener_backup_infrastructure_secret.accessKeyID | b64decode }}"
  # secretAccessKey: "{{ gardener_backup_infrastructure_secret.secretAccessKey | b64decode}}"

gardener_backup_infrastructure_secret:
  hostPath: "{{ '/etc/gardener/local-backupbuckets' | b64encode }}"

  # for gcp:
  # serviceaccount.json: "{{ gardener_backup_infrastructure_service_account_json | b64encode }}"
  #
  # for S3:
  # endpoint:
  # accessKeyID:
  # secretAccessKey:

gardener_soil_name: "{{ metal_control_plane_stage_name }}"
gardener_soil_kubeconfig_file_path: "{{ lookup('env', 'KUBECONFIG') }}"
gardener_soil_vertical_pod_autoscaler_enabled: false
gardener_soil_project_owner_name: admin
gardener_soil_project_members: []

gardener_gardenlet_shoot_concurrent_syncs: 20
gardener_gardenlet_shoot_reconcile_in_maintenance_only: false
gardener_gardenlet_shoot_respect_sync_period_overwrite: true

gardener_local_tmp_dir: "{{ playbook_dir }}/.ansible/tmp"

gardener_logging_enabled: false
