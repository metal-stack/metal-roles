---
- import_tasks: redhat.yaml
  when: ansible_os_family == 'RedHat'

- name: Enable systemd-networkd
  systemd:
    name: systemd-networkd
    enabled: yes
    state: started

- name: Copy systemd-networkd conf
  copy:
    src: networkd.conf
    dest: /etc/systemd/
  notify: restart systemd-networkd

- name: Copy default file for VRFs
  copy:
    src: 99-vrf.network
    dest: /etc/systemd/network/
  when: systemd_networkd_vrfs | length > 0
  notify: restart systemd-networkd

- name: Template netdev for VRFs
  template:
    src: vrf.netdev.j2
    dest: "/etc/systemd/network/0{{ (i+1) }}-{{ item.name }}.netdev"
  when: item.name is defined and item.table is defined
  notify: restart systemd-networkd
  loop: "{{ systemd_networkd_vrfs }}"
  loop_control:
    index_var: i

- name: Render systemd-networkd link config
  template:
    src: link.j2
    dest: "/etc/systemd/network/{{ (i+1)*10 }}-{{ item.name }}.link"
  when: item.name != 'lo'
  notify:
  - restart systemd-networkd
  - rename interfaces
  loop: "{{ systemd_networkd_nics }}"
  loop_control:
    index_var: i

- name: Render systemd-networkd network config
  template:
    src: network.j2
    dest: "/etc/systemd/network/{{ (i+1)*10 }}-{{ item.name }}.network"
  notify: restart systemd-networkd
  loop: "{{ systemd_networkd_nics }}"
  loop_control:
    index_var: i

- name: Update ansible facts
  setup:

- name: Reboot if interfaces were not renamed successfully
  block:
    - name: Reboot
      reboot:
        reboot_timeout: 180
      ignore_errors: true
    - name: Wait for connection
      wait_for_connection:
  when: "(systemd_networkd_nics | map(attribute='name')) is not subset(ansible_facts.interfaces)"

- name: Render systemd-networkd vlan netdev config
  template:
    src: vlan.netdev.j2
    dest: "/etc/systemd/network/{{ i+71 }}-{{ item.name }}.netdev"
  notify: restart systemd-networkd
  loop: "{{ systemd_networkd_vlans }}"
  loop_control:
    index_var: i

- name: Render systemd-networkd vlan network config
  template:
    src: vlan.network.j2
    dest: "/etc/systemd/network/{{ i+71 }}-{{ item.name }}.network"
  notify: restart systemd-networkd
  loop: "{{ systemd_networkd_vlans }}"
  loop_control:
    index_var: i

- include_tasks: vxlans.yaml
  when: systemd_networkd_vxlans

- name: Flush handlers
  meta: flush_handlers
