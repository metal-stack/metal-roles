---
- name: Retrieve device metadta from running configuration
  block:
    - name: Get current config
      command: show runningconfiguration all
      register: sonic_config_current_config_result
      changed_when: false

    - name: Parse current config
      set_fact:
        sonic_config_current_config: "{{ sonic_config_current_config_result.stdout | from_json }}"

    - name: Get metadata
      set_fact:
        sonic_config_device_metadata: "{{ sonic_config_current_config | community.general.json_query('DEVICE_METADATA.localhost') }}"

- name: Create temporary directory
  file:
    path: /tmp/sonic
    state: directory

- name: Render input values template
  template:
    src: sonic-config.yaml.j2
    dest: /tmp/sonic/sonic-config.yaml

- name: Load and save sonic-configdb-utils image
  become: true
  connection: local
  block:
    - name: Pull image
      command: docker pull "{{ sonic_configdb_utils_image_name }}:{{ sonic_configdb_utils_image_tag }}"

    - name: Save image
      command: docker image save "{{ sonic_configdb_utils_image_name }}:{{ sonic_configdb_utils_image_tag }}" -o /tmp/sonic-configdb-utils

- name: Load image onto remote
  block:
    - name: Copy image to remote
      copy:
        src: /tmp/sonic-configdb-utils
        dest: /tmp/sonic-configdb-utils
        mode: 0644

    - name: Load image
      command: docker load -i /tmp/sonic-configb-utils

- name: Run sonic-configdb-utils
  community.docker.docker_container:
    name: sonic-configdb-utils
    image: "{{ sonic_configdb_utils_image_name }}:{{ sonic_configdb_utils_image_tag }}"
    detach: false
    cleanup: true
    pull: never
    command: generate
    volumes:
      - /usr/share/sonic/device:/usr/share/sonic/device/:ro
      - /tmp/sonic:/etc/sonic:ro
      - /tmp/sonic:/sonic

- name: Override the existing config_db.json with the newly generated one
  copy:
    src: /tmp/sonic/config_db.json
    dest: /etc/sonic/config_db.json
    mode: 0644
    owner: root
    group: root
    remote_src: true

- name: Reload config if reload is required
  when: sonic_config_reload_config
  block:
    - name: Reload config
      command: config reload --yes
      async: 120
      poll: 0

    - name: wait for new connection
      wait_for_connection:
        connect_timeout: 20
        sleep: 5
        delay: 30
        timeout: 300

- name: Load config if not reloaded
  command: config load --yes
  when: not sonic_config_reload_config

- name: Remove temporary directory
  file:
    path: /tmp/sonic/
    state: absent
