---
- name: create prometheus directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "nobody"
    group: "nogroup"
    mode: "0755"
  loop:
    - "{{ prometheus_config_host_dir }}"
    - "{{ prometheus_config_host_dir }}/file_sd"
    - "{{ prometheus_data_host_dir }}"

- name: generate /etc/hosts
  copy:
   content: "{{ prometheus_hosts_content }}"
   dest: "{{ prometheus_config_host_dir }}/hosts"

- name: generate prometheus.yaml
  template:
    src: prometheus.yaml.j2
    dest: "{{ prometheus_config_host_dir }}/prometheus.yaml"
  notify: restart prometheus

- name: generate prometheus_metal_core_sd
  set_fact:
    prometheus_metal_core_sd:
    - labels:
        job: metal-core
      targets: "{{ prometheus_metal_core_targets }}"

- name: create metal-core.yaml
  copy:
    content: '{{ prometheus_metal_core_sd | to_nice_yaml(indent=2) }}'
    dest: "{{ prometheus_config_host_dir }}/file_sd/metal-core.yaml"
  notify: restart prometheus

- name: generate prometheus_node_exporter_sd
  set_fact:
    prometheus_node_exporter_sd:
    - labels:
        job: node-exporter
      targets: "{{ prometheus_node_exporter_targets }}"

- name: create node-exporter.yaml
  copy:
    content: '{{ prometheus_node_exporter_sd | to_nice_yaml(indent=2) }}'
    dest: "{{ prometheus_config_host_dir }}/file_sd/node-exporter.yaml"
  notify: restart prometheus

- name: generate prometheus_ping_sd
  set_fact:
    prometheus_ping_sd:
    - labels:
        job: ping
      targets: "{{ prometheus_ping_targets }}"

- name: create ping.yaml
  copy:
    content: '{{ prometheus_ping_sd | to_nice_yaml(indent=2) }}'
    dest: "{{ prometheus_config_host_dir }}/file_sd/ping.yaml"
  notify: restart prometheus

- name: generate prometheus_frr_exporter_sd
  set_fact:
    prometheus_frr_exporter_sd:
    - labels:
        job: frr
      targets: "{{ prometheus_frr_exporter_targets }}"

- name: create frr-exporter.yaml
  copy:
    content: '{{ prometheus_frr_exporter_sd | to_nice_yaml(indent=2) }}'
    dest: "{{ prometheus_config_host_dir }}/file_sd/frr-exporter.yaml"
  notify: restart prometheus

- name: get dhcp leases
  shell: dhcp-lease-list --parsable 2>/dev/null | grep -oE "([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})" | sort
  register: prometheus_dhcp_leases

- name: generate prometheus_ipmi_exporter_targets
  set_fact:
    prometheus_ipmi_exporter_targets: "{{ prometheus_ipmi_exporter_targets|default([]) + [item] }} "
  loop: "{{ prometheus_dhcp_leases.stdout_lines }}"

- name: generate prometheus_ipmi_exporter_targets_sd
  set_fact:
    prometheus_ipmi_exporter_targets_sd:
    - labels:
        job: ipmi
      targets: "{{ prometheus_ipmi_exporter_targets }}"

- name: create ipmi.yaml
  copy:
    content: '{{ prometheus_ipmi_exporter_targets_sd | to_nice_yaml(indent=2) }}'
    dest: "{{ prometheus_config_host_dir }}/file_sd/ipmi.yaml"
  notify: restart prometheus

- name: generate prometheus_promtail_sd
  set_fact:
    prometheus_promtail_sd:
    - labels:
        job: frr
      targets: "{{ prometheus_promtail_targets }}"

- name: create promtail.yaml
  copy:
    content: '{{ prometheus_promtail_sd | to_nice_yaml(indent=2) }}'
    dest: "{{ prometheus_config_host_dir }}/file_sd/promtail.yaml"
  notify: restart prometheus

- name: generate prometheus_sonic_exporter_sd
  set_fact:
    prometheus_sonic_exporter_sd:
    - labels:
        job: sonic-exporter
      targets: "{{ prometheus_sonic_exporter_targets }}"

- name: create sonic-exporter.yaml
  copy:
    content: '{{ prometheus_sonic_exporter_sd | to_nice_yaml(indent=2) }}'
    dest: "{{ prometheus_config_host_dir }}/file_sd/sonic-exporter.yaml"
  notify: restart prometheus

- name: generate prometheus_tcp_connect_sd
  set_fact:
    prometheus_tcp_connect_sd:
    - labels:
        job: frr
      targets: "{{ prometheus_tcp_connect_targets }}"

- name: create tcp_connect.yaml
  copy:
    content: '{{ prometheus_tcp_connect_sd | to_nice_yaml(indent=2) }}'
    dest: "{{ prometheus_config_host_dir }}/file_sd/tcp-connect.yaml"
  notify: restart prometheus

- name: copy notification rules
  copy:
    src: files/rules/
    dest: "{{ prometheus_config_host_dir }}/rules/"
  notify: restart prometheus

- name: deploy prometheus service
  include_role:
    name: ansible-common/roles/systemd-docker-service
  vars:
    systemd_service_name: prometheus
    systemd_docker_image_name: "{{ prometheus_image_name }}"
    systemd_docker_image_tag: "{{ prometheus_image_tag }}"
    systemd_service_after: docker.service
    systemd_service_requires: docker.service
    systemd_docker_volumes:
      - "{{ prometheus_config_host_dir }}:/etc/prometheus"
      - "/etc/hosts:/etc/hosts:ro"
      - "{{ prometheus_data_host_dir }}:/prometheus"
    systemd_docker_ports:
      - host_port: "{{ prometheus_port }}"
        target_port: "{{ prometheus_port }}"
    systemd_docker_command:
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
      - --web.enable-lifecycle
      - --storage.tsdb.retention.time=6h
      - --storage.tsdb.no-lockfile
      - --storage.tsdb.min-block-duration=2h
      - --storage.tsdb.max-block-duration=2h

- name: wait for prometheus to listen on port
  wait_for:
    port: "{{ prometheus_port }}"
    timeout: 300
    msg: "prometheus did not come up"
