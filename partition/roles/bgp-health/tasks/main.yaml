---
- name: Run show bgp summary json
  command: vtysh -c "show bgp summary json"
  register: bgp_summary_json

- name: Parse JSON output
  set_fact:
    bgp_summary: "{{ bgp_summary_json.stdout | from_json }}"

- name: Check if no neighbors
  set_fact:
    no_neighbors: "{{ bgp_summary.ipv4Unicast.peerCount == 0 }}"

- name: Set unestablished_neighbors based on no neighbors
  set_fact:
    unestablished_neighbors: "No BGP neighbors found"
  when: no_neighbors

- name: Initialize unestablished_neighbors
  set_fact:
    unestablished_neighbors: []
  when: not no_neighbors

- name: Find unestablished neighbors
  set_fact:
    unestablished_neighbors: >-
      {{ unestablished_neighbors + [neighbor_name] if item.value.state != 'Established' or item.value.peerUptime == 'never' else unestablished_neighbors }}
  with_dict: "{{ bgp_summary.ipv4Unicast.peers }}"
  vars:
    neighbor_name: >-
      {{
        (item.value.get('hostname', '') + '(' + item.key + ')') if item.value.get('hostname', '') else item.key
      }}
  when: not no_neighbors
  no_log: true

- name: Report issues
  debug:
    msg: "{{ inventory_hostname }}: {{ unestablished_neighbors | join(', ') }}"
  when: unestablished_neighbors | length > 0
  register: issues
